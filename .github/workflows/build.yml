name: Build VectorAudio

on: [push]

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install SFML dependencies
        run: |
          sudo apt-get install libx11-dev libxrandr-dev libxi-dev libudev-dev libgl1-mesa-dev
      - name: Configure cmake
        run: |
          cmake -S . -B build/ -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - name: Build cmake
        run: |
          cmake --build build/
  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Create universal build folder
        run: |
          mkdir build/
          mkdir -p build/extern/afv-native/
      - name: Configure cmake (intel)
        run: |
          cmake -S . -B build_intel/ -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_OSX_ARCHITECTURES=x86_64 -DVCPKG_TARGET_TRIPLET=x64-osx
      - name: Build cmake (intel)
        run: |
          cmake --build build_intel/
      - name: Cleanup intel build
        run: |
          cp build_intel/extern/afv-native/libafv.dylib build/libafv.dylib.intel
          cp build_intel/vector_audio build/vector_audio.intel
          rm -rf build_intel/
      - name: Configure cmake (arm64)
        run: |
          cmake -S . -B build_arm64/ -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_OSX_ARCHITECTURES=arm64 -DVCPKG_TARGET_TRIPLET=arm64-osx
      - name: Build cmake (arm64)
        run: |
          cmake --build build_arm64/
      - name: Cleanup arm64 build
        run: |
          cp build_arm64/extern/afv-native/libafv.dylib build/libafv.dylib.arm
          cp build_arm64/vector_audio build/vector_audio.arm
          rm -rf build_arm64/
      - name: Create Universal Binary
        run: |
          lipo -create build/libafv.dylib.arm build/libafv.dylib.intel -output build/extern/afv-native/libafv.dylib
          lipo -create build/vector_audio.arm build/vector_audio.intel -output build/vector_audio
      - name: Bundle OSX
        run: |
          ./bundle_osx.sh
      - name: Archive build result
        uses: actions/upload-artifact@v2
        with:
          name: VectorAudio_osx
          path: build/VectorAudio_i386.dmg