name: Release Vector Audio

on:
  push:
    tags:
      - v*

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release
  VECTOR_SECRET: Dev

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Install SFML dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libx11-dev libxrandr-dev libxi-dev libudev-dev libgl1-mesa-dev libxcursor-dev freeglut3-dev pkg-config desktop-file-utils
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt install libfuse2
      - name: Configure cmake
        run: |
          cmake -S . -B build/ -DVCPKG_BUILD_TYPE=release -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVECTOR_SECRET=${{ env.VECTOR_SECRET }}
      - name: Build cmake
        run: |
          cmake --build build/
      - name: Bundle Linux
        run: |
          ./bundle_linux.sh libafv_native.so
      - name: Rename installer
        run: |
          mv VectorAudio-x86_64.AppImage VectorAudio-${{ github.ref_name }}-x86_64.AppImage
          mv VectorAudio-x86_64.AppImage.zsync VectorAudio-${{ github.ref_name }}-x86_64.AppImage.zsync
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            VectorAudio-${{ github.ref_name }}-x86_64.AppImage
            VectorAudio-${{ github.ref_name }}-x86_64.AppImage.zsync
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Configure cmake
        run: |
          cmake -S . -B build/ -DVCPKG_BUILD_TYPE=release -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVECTOR_SECRET=${{ env.VECTOR_SECRET }}
      - name: Build cmake
        run: |
          cmake --build build/ --config Release
      - name: Prepare windows installer
        run: |
          python collect_licenses.py
          mkdir installer
          cp resources/*.wav installer/
          cp resources/favicon.ico installer/
          cp resources/icon_win.png installer/
          cp resources/*.ttf installer/
          cp resources/airports.json installer/
          cp resources/LICENSE.txt installer/
          cp build/Release/vector_audio.exe installer/
          cp build/Release/*.dll installer/
          cp build/extern/afv-native/Release/*.dll installer/
          cp bundle_windows.nsi installer/install.nsi
      - name: Create installer
        run: |
          cd installer/
          makensis install.nsi
      - name: Rename installer
        run: |
          mv installer/VectorAudio-installer.exe VectorAudio-${{ github.ref_name }}-Installer.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: VectorAudio-${{ github.ref_name }}-Installer.exe
  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install native dependencies
        run: |
          brew install pkg-config
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Create universal build folder
        run: |
          mkdir build/
          mkdir -p build/extern/afv-native/
      - name: Configure cmake (intel)
        run: |
          cmake -S . -B build_intel/ -DVCPKG_BUILD_TYPE=release -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_OSX_ARCHITECTURES=x86_64 -DVCPKG_TARGET_TRIPLET=x64-osx -DVECTOR_SECRET=${{ env.VECTOR_SECRET }}
      - name: Build cmake (intel)
        run: |
          cmake --build build_intel/
      - name: Cleanup intel build
        run: |
          cp build_intel/extern/afv-native/libafv_native.dylib build/libafv_native.dylib.intel
          cp build_intel/vector_audio build/vector_audio.intel
          rm -rf build_intel/
      - name: Configure cmake (arm64)
        run: |
          cmake -S . -B build_arm64/ -DVCPKG_BUILD_TYPE=release -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_OSX_ARCHITECTURES=arm64 -DVCPKG_TARGET_TRIPLET=arm64-osx -DVECTOR_SECRET=${{ env.VECTOR_SECRET }}
      - name: Build cmake (arm64)
        run: |
          cmake --build build_arm64/
      - name: Cleanup arm64 build
        run: |
          cp build_arm64/extern/afv-native/libafv_native.dylib build/libafv_native.dylib.arm
          cp build_arm64/vector_audio build/vector_audio.arm
          rm -rf build_arm64/
      - name: Create Universal Binary
        run: |
          lipo -create build/libafv_native.dylib.arm build/libafv_native.dylib.intel -output build/extern/afv-native/libafv_native.dylib
          lipo -create build/vector_audio.arm build/vector_audio.intel -output build/vector_audio
      - name: Bundle OSX
        run: |
          ./bundle_osx.sh
      - name: Create DMG
        run: |
          brew install create-dmg
          create-dmg --volname "Vector Audio Installer" --app-drop-link 600 185 --window-size 800 400 --icon "VectorAudio.app" 200 190 "VectorAudio-${{ env.RELEASE_VERSION }}-Universal.dmg" "build/VectorAudio.app"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: VectorAudio-${{ env.RELEASE_VERSION }}-Universal.dmg
